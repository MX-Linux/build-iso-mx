export kernel_label_0
export kernel_label_1
export kernel_version_0
export kernel_version_1

function kernel_options {

kernel="$1"
kernel_bdir="/antiX"

x=""
for n in "" 1 2 3 4 5 6 7 8 9; do 
    if [ -f  "$kernel_bdir/vmlinuz${n}" ]; then
        x="x$x"
        k="vmlinuz${n}"
    fi
done

if [ -z "$x" ]; then # hmm... no kernel found
    unset k
    unset n
    unset x
    unset kernel_bdir
    return 
fi
if [ "$x" = "x" ]; then # only one kernel found 
   kernel="$k"
   export kernel
   set_kernel "$kernel"
   unset k
   unset n
   unset x
   unset kernel_bdir
   return
fi
set_kernel "$kernel"

submenu " "$"Kernel options"": $kernel_version $kernel_label" "$kernel" --class=kernel  --id='kernel_options' {
kernel="$2"
export kernel
if [ -z "$kernel" ]; then kernel=vmlinuz; fi

#menuentry " ===> "$"Kernel"": $kernel_version"" <=== "  --class=kernel  {main_menu}
menuentry " ===>""$1"  --class=kernel_options    {default=kernel_options; options_menu_reload kernel_options}

kernel_select "$kernel"
menuentry "<=== "$"Back to main menu" --hotkey=Q --class=cancel {
  default=linux
  main_menu
}
}
}

function kernel_select {
v="$1"
kernel="$v"
export kernel
vmlinuz=""
for n in "" 1 2 3 4 5 6 7 8 9; do 
    vmlinuz="vmlinuz${n}"
    if [ ! -f "/antiX/${vmlinuz}" ]; then continue; fi
    if [ x"${vmlinuz}" == x"$v" ]; then 
        m=">"; default="'${vmlinuz}'"; 
    else 
        m=" "; 
    fi
    y=""
    z=""
    
    if [ -z "$n"  ]; then
       y="$kernel_label_0"
       z="$kernel_version_0"
    elif [ "${n}" == "1" ]; then
       y="$kernel_label_1"
       z="$kernel_version_1"
    fi
    KERNEL_VERSION=""
    KERNEL_LABEL=""
    if [ -f "/antiX/${vmlinuz}.ver" ]; then
       source "/antiX/${vmlinuz}.ver"
    fi
    if [ -n "$KERNEL_LABEL"   ]; then y="$KERNEL_LABEL";  fi
    if [ -n "$KERNEL_VERSION" ]; then 
      z="$KERNEL_VERSION"
    elif [ -z "$z" ]; then
           z=${vmlinuz}
    fi
    unset KERNEL_VERSION
    unset KERNEL_LABEL

    menuentry "$m""Kernel: $z $y " "$vmlinuz" --class=kernel --id="'$vmlinuz'" {
set_kernel "$2"
options_menu_reload kernel_options
}
done
unset v
unset x
unset y
unset z
unset vmlinuz

}

